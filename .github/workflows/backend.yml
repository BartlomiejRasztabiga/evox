name: Backend

on:
  push:
    branches: [ '**' ]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Set up Poetry
        run: |
          pip install poetry
          poetry install -v
      - name: Lint
        run: |
          poetry run ./scripts/lint.sh

  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13.3
        env:
          POSTGRES_USER: evox
          POSTGRES_PASSWORD: evox
          POSTGRES_DB: evox
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Set up Poetry
        run: |
          pip install poetry
          poetry install -v
      - name: Test
        env:
          POSTGRES_SERVER: localhost
          POSTGRES_USER: evox
          POSTGRES_PASSWORD: evox
          POSTGRES_DB: evox
        run: |
          poetry run bash ./prestart.sh
          poetry run pytest --cov=app --cov-report=xml app/tests "${@}"
  docker:
    runs-on: ubuntu-latest

    steps:
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: |
            navareth/evox
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
